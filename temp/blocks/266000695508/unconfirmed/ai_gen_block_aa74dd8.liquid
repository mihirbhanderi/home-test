{% doc %}
  @prompt
    Create a product display section that shows all color variants for a product with clickable color swatches. When a color variant is clicked, it should redirect to that variant's product page. Include the ability to display color images from a metafield instead of the main product image. The section should handle multiple color options and provide smooth navigation between variant pages.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-product-color-variants-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding }}px;
    background-color: {{ block.settings.background_color }};}

  .ai-product-color-variants__container-{{ ai_gen_id }} {
    max-width: {{ block.settings.max_width }}px;
    margin: 0 auto;
  }

  .ai-product-color-variants__content-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap:40px;
    align-items: start;
  }

  .ai-product-color-variants__image-section-{{ ai_gen_id }} {
    position: relative;}

  .ai-product-color-variants__main-image-{{ ai_gen_id }} {
    width: 100%;
    height: auto;
    border-radius: {{ block.settings.image_border_radius }}px;
    transition: opacity 0.3s ease;
  }

  .ai-product-color-variants__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    aspect-ratio: 1;
    background-color: #f4f4f4;
    border-radius: {{ block.settings.image_border_radius }}px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-product-color-variants__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-product-color-variants__info-section-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .ai-product-color-variants__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    font-weight: 600;
    color: {{ block.settings.text_color }};
    margin: 0;
    line-height: 1.2;
  }

  .ai-product-color-variants__price-{{ ai_gen_id }} {
    font-size: {{ block.settings.price_size }}px;
    color: {{ block.settings.text_color }};
    font-weight: 500;
  }

  .ai-product-color-variants__description-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.description_size }}px;
    line-height: 1.5;
    opacity: 0.8;
  }

  .ai-product-color-variants__colors-section-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .ai-product-color-variants__colors-label-{{ ai_gen_id }} {
    font-size: {{ block.settings.label_size }}px;
    font-weight: 500;
    color: {{ block.settings.text_color }};
    margin: 0;
  }

  .ai-product-color-variants__color-swatches-{{ ai_gen_id }} {
    display: flex;
    flex-wrap: wrap;
    gap: 12px;
  }

  .ai-product-color-variants__color-swatch-{{ ai_gen_id }} {
    position: relative;
    width: {{ block.settings.swatch_size }}px;
    height: {{ block.settings.swatch_size }}px;
    border-radius: {{ block.settings.swatch_border_radius }}px;
    border: 2px solid transparent;
    cursor: pointer;
    transition: all 0.3s ease;
    overflow: hidden;
    text-decoration: none;
    display: block;
  }

  .ai-product-color-variants__color-swatch-{{ ai_gen_id }}:hover {
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .ai-product-color-variants__color-swatch-{{ ai_gen_id }}.active {
    border-color: {{ block.settings.active_border_color }};
    box-shadow: 0 0 0 2px {{ block.settings.active_border_color }}40;
  }

  .ai-product-color-variants__swatch-inner-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    border-radius: calc({{ block.settings.swatch_border_radius }}px - 2px);
    position: relative;
    overflow: hidden;
  }

  .ai-product-color-variants__swatch-color-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    border-radius: calc({{ block.settings.swatch_border_radius }}px - 2px);
  }

  .ai-product-color-variants__swatch-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: calc({{ block.settings.swatch_border_radius }}px - 2px);
  }

  .ai-product-color-variants__swatch-tooltip-{{ ai_gen_id }} {
    position: absolute;
    bottom: calc(100% + 8px);
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 6px 10px;
    border-radius: 4px;
    font-size: 12px;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    pointer-events: none;z-index: 10;
  }

  .ai-product-color-variants__color-swatch-{{ ai_gen_id }}:hover .ai-product-color-variants__swatch-tooltip-{{ ai_gen_id }} {
    opacity: 1;
    visibility: visible;
  }

  .ai-product-color-variants__selected-color-{{ ai_gen_id }} {
    font-size: {{ block.settings.selected_color_size }}px;
    color: {{ block.settings.text_color }};
    font-weight: 500;
    margin-top: 8px;
  }

  @media screen and (max-width: 768px) {
    .ai-product-color-variants__content-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 24px;
    }

    .ai-product-color-variants__color-swatches-{{ ai_gen_id }} {
      gap: 8px;
    }

    .ai-product-color-variants__color-swatch-{{ ai_gen_id }} {
      width: calc({{ block.settings.swatch_size }}px * 0.8);
      height: calc({{ block.settings.swatch_size }}px * 0.8);
    }
  }
{% endstyle %}

<product-color-variants-{{ ai_gen_id }}
  class="ai-product-color-variants-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-product-color-variants__container-{{ ai_gen_id }}">
    {% if block.settings.product != blank %}
      {% assign selected_product = block.settings.product %}
      {% assign color_option = null %}
      
      {% for option in selected_product.options_with_values %}
        {% assign option_name_downcase = option.name | downcase %}
        {% if option_name_downcase contains 'color' or option_name_downcase contains 'colour' %}
          {% assign color_option = option %}
          {% break %}
        {% endif %}
      {% endfor %}

      <div class="ai-product-color-variants__content-{{ ai_gen_id }}">
        <div class="ai-product-color-variants__image-section-{{ ai_gen_id }}">
          {% assign display_image = null %}
          
          {% if block.settings.use_metafield_images and selected_product.selected_variant.metafields.custom[block.settings.metafield_key] != blank %}
            {% assign display_image = selected_product.selected_variant.metafields.custom[block.settings.metafield_key] %}
          {% elsif selected_product.featured_image %}
            {% assign display_image = selected_product.featured_image %}
          {% endif %}

          {% if display_image %}
            <img
              src="{{ display_image | image_url: width: 800 }}"
              alt="{{ display_image.alt | default: selected_product.title | escape }}"
              width="{{ display_image.width }}"
              height="{{ display_image.height }}"
              loading="lazy"
              class="ai-product-color-variants__main-image-{{ ai_gen_id }}"
            >
          {% else %}
            <div class="ai-product-color-variants__image-placeholder-{{ ai_gen_id }}">
              {{ 'product-1' | placeholder_svg_tag }}
            </div>
          {% endif %}
        </div>

        <div class="ai-product-color-variants__info-section-{{ ai_gen_id }}">
          <h1 class="ai-product-color-variants__title-{{ ai_gen_id }}">
            {{ selected_product.title }}
          </h1>

          <div class="ai-product-color-variants__price-{{ ai_gen_id }}">
            {% if selected_product.compare_at_price > selected_product.price %}
              <span style="text-decoration: line-through; opacity: 0.6;">
                {{ selected_product.compare_at_price | money }}
              </span><span style="color: #d82c0d; margin-left: 8px;">
                {{ selected_product.price | money }}
              </span>
            {% else %}
              {{ selected_product.price | money }}
            {% endif %}
          </div>

          {% if block.settings.show_description and selected_product.description != blank %}
            <div class="ai-product-color-variants__description-{{ ai_gen_id }}">
              {{ selected_product.description | truncate: 200 }}
            </div>
          {% endif %}

          {% if color_option %}
            <div class="ai-product-color-variants__colors-section-{{ ai_gen_id }}">
              <h3 class="ai-product-color-variants__colors-label-{{ ai_gen_id }}">
                {{ block.settings.color_label }}
              </h3>

              <div class="ai-product-color-variants__color-swatches-{{ ai_gen_id }}">
                {% for color_value in color_option.values %}
                  {% assign color_variant = null %}
                  {% for variant in selected_product.variants %}
                    {% for option in variant.options %}
                      {% if option == color_value %}
                        {% assign color_variant = variant %}
                        {% break %}
                      {% endif %}
                    {% endfor %}{% if color_variant %}
                      {% break %}
                    {% endif %}
                  {% endfor %}

                  {% if color_variant %}
                    {% assign is_current = false %}
                    {% if selected_product.selected_variant.id == color_variant.id %}
                      {% assign is_current = true %}
                    {% endif %}

                    {% assign swatch_image = null %}
                    {% if block.settings.use_metafield_images and color_variant.metafields.custom[block.settings.metafield_key] != blank %}
                      {% assign swatch_image = color_variant.metafields.custom[block.settings.metafield_key] %}
                    {% endif %}

                    <a
                      href="{{ color_variant.url }}"
                      class="ai-product-color-variants__color-swatch-{{ ai_gen_id }} {% if is_current %}active{% endif %}"
                      data-variant-id="{{ color_variant.id }}"
                      data-color="{{ color_value | escape }}"
                      aria-label="Select {{ color_value }} variant"
                    >
                      <div class="ai-product-color-variants__swatch-inner-{{ ai_gen_id }}">
                        {% if swatch_image %}
                          <img
                            src="{{ swatch_image | image_url: width: 100 }}"
                            alt="{{ color_value }}"
                            class="ai-product-color-variants__swatch-image-{{ ai_gen_id }}"
                            loading="lazy"
                          >
                        {% else %}
                          {% assign color_handle = color_value | handle %}
                          {% assign color_code = null %}
                          
                          {% case color_handle %}
                            {% when 'red' %}
                              {% assign color_code = '#ff0000' %}
                            {% when 'blue' %}
                              {% assign color_code = '#0000ff' %}
                            {% when 'green' %}
                              {% assign color_code = '#008000' %}
                            {% when 'black' %}
                              {% assign color_code = '#000000' %}
                            {% when 'white' %}
                              {% assign color_code = '#ffffff' %}
                            {% when 'gray' or 'grey' %}
                              {% assign color_code = '#808080' %}
                            {% when 'yellow' %}
                              {% assign color_code = '#ffff00' %}
                            {% when 'pink' %}
                              {% assign color_code = '#ffc0cb' %}
                            {% when 'purple' %}
                              {% assign color_code = '#800080' %}
                            {% when 'orange' %}
                              {% assign color_code = '#ffa500' %}
                            {% when 'brown' %}
                              {% assign color_code = '#a52a2a' %}
                            {% when 'navy' %}
                              {% assign color_code = '#000080' %}
                            {% when 'beige' %}
                              {% assign color_code = '#f5f5dc' %}
                            {% when 'cream' %}
                              {% assign color_code = '#fffdd0' %}
                            {% else %}
                              {% assign color_code = '#cccccc' %}
                          {% endcase %}

                          <div
                            class="ai-product-color-variants__swatch-color-{{ ai_gen_id }}"
                            style="background-color: {{ color_code }}; {% if color_handle == 'white' %}border: 1px solid #e0e0e0;{% endif %}"></div>
                        {% endif %}
                      </div>
                      <div class="ai-product-color-variants__swatch-tooltip-{{ ai_gen_id }}">
                        {{ color_value }}
                      </div></a>
                  {% endif %}
                {% endfor %}
              </div>

              {% if block.settings.show_selected_color %}
                <div class="ai-product-color-variants__selected-color-{{ ai_gen_id }}">
                  {{ block.settings.selected_color_prefix }} {{ selected_product.selected_variant.option1 | default: selected_product.selected_variant.title }}
                </div>
              {% endif %}
            </div>
          {% endif %}
        </div>
      </div>
    {% else %}
      <div class="ai-product-color-variants__container-{{ ai_gen_id }}">
        <div class="ai-product-color-variants__content-{{ ai_gen_id }}">
          <div class="ai-product-color-variants__image-section-{{ ai_gen_id }}"><div class="ai-product-color-variants__image-placeholder-{{ ai_gen_id }}">
              {{ 'product-1' | placeholder_svg_tag }}
            </div>
          </div>
          <div class="ai-product-color-variants__info-section-{{ ai_gen_id }}">
            <h1 class="ai-product-color-variants__title-{{ ai_gen_id }}">
              Select a product to display
            </h1>
            <div class="ai-product-color-variants__description-{{ ai_gen_id }}">
              Choose a product from the block settings to showcase its color variants.
            </div>
          </div>
        </div>
      </div>
    {% endif %}
  </div>
</product-color-variants-{{ ai_gen_id }}>

<script>
  (function() {
    class ProductColorVariants{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.swatches = this.querySelectorAll('.ai-product-color-variants__color-swatch-{{ ai_gen_id }}');
        this.mainImage = this.querySelector('.ai-product-color-variants__main-image-{{ ai_gen_id }}');
        this.setupEventListeners();
      }

      setupEventListeners() {
        this.swatches.forEach(swatch => {
          swatch.addEventListener('click', (e) => {
            e.preventDefault();
            
            this.swatches.forEach(s => s.classList.remove('active'));
            swatch.classList.add('active');
            
            setTimeout(() => {
              window.location.href = swatch.href;
            }, 150);
          });

          swatch.addEventListener('mouseenter', () => {
            const swatchImage = swatch.querySelector('.ai-product-color-variants__swatch-image-{{ ai_gen_id }}');
            if (swatchImage && this.mainImage) {
              this.previewImage(swatchImage.src.replace('width=100', 'width=800'));
            }
          });
        });

        this.addEventListener('mouseleave', () => {
          this.resetMainImage();
        });
      }

      previewImage(imageSrc) {
        if (this.mainImage) {
          this.mainImage.style.opacity = '0.7';
          setTimeout(() => {
            this.mainImage.src = imageSrc;
            this.mainImage.style.opacity = '1';
          }, 150);
        }
      }

      resetMainImage() {
        if (this.mainImage) {
          const activeSwatchImage = this.querySelector('.ai-product-color-variants__color-swatch-{{ ai_gen_id }}.active .ai-product-color-variants__swatch-image-{{ ai_gen_id }}');
          if (activeSwatchImage) {
            this.mainImage.src = activeSwatchImage.src.replace('width=100', 'width=800');
          }
        }
      }
    }

    customElements.define('product-color-variants-{{ ai_gen_id }}', ProductColorVariants{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Product Color Variants",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Product Selection"
    },
    {
      "type": "product",
      "id": "product",
      "label": "Product"
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "label": "Show product description",
      "default": true
    },
    {
      "type": "header",
      "content": "Color Variants"
    },
    {
      "type": "text",
      "id": "color_label",
      "label": "Color section label",
      "default": "Color"
    },
    {
      "type": "checkbox",
      "id": "show_selected_color",
      "label": "Show selected color name",
      "default": true
    },
    {
      "type": "text",
      "id": "selected_color_prefix",
      "label": "Selected color prefix",
      "default": "Selected:"
    },
    {
      "type": "header",
      "content": "Metafield Images"
    },
    {
      "type": "checkbox",
      "id": "use_metafield_images",
      "label": "Use metafield images for variants",
      "info": "When enabled, the block will look for variant-specific images in the specified metafield"
    },
    {
      "type": "text",
      "id": "metafield_key",
      "label": "Metafield key",
      "default": "color_image",
      "info": "The metafield key where variant color images are stored (e.g., 'color_image')"
    },
    {
      "type": "header",
      "content": "Style Settings"
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 600,
      "max": 1400,
      "step": 50,
      "unit": "px",
      "label": "Maximum width",
      "default": 1200
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 40
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 32
    },
    {
      "type": "range",
      "id": "price_size",
      "min": 14,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Price size",
      "default": 24
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 16
    },
    {
      "type": "range",
      "id": "label_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Label size",
      "default": 16
    },
    {
      "type": "range",
      "id": "selected_color_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Selected color text size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Color Swatches"
    },
    {
      "type": "range",
      "id": "swatch_size",
      "min": 30,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "Swatch size",
      "default": 50
    },
    {
      "type": "range",
      "id": "swatch_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Swatch border radius",
      "default": 8
    },
    {
      "type": "color",
      "id": "active_border_color",
      "label": "Active swatch border color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Main image border radius",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Product Color Variants"
    }
  ]
}
{% endschema %}